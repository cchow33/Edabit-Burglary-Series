// Given an object with three rounds, with nested objects as your scores per round, return a string of who cursed the most: If you, return "ME!" If your spouse, return "SPOUSE!", If a draw, return "DRAW!"

// SOLUTION 1:
function determineWhoCursedTheMost(obj) {

  let me = 0;
  let spouse = 0;
  const meArr= [];
  const spouseArr = [];

  for (let key in obj){
    meArr.push(obj[key]['me']);
    spouseArr.push(obj[key]['spouse']);
 
    me = meArr.reduce((a,b)=> a+b)
    spouse = spouseArr.reduce((a,b)=> a+b)
 
  }
  
  return me === spouse ? 'DRAW!' : me < spouse ? 'SPOUSE!' : 'ME!'
}

// SOLUTION 2:
determineWhoCursedTheMost = o => {
 
 let s = Object.values(o).reduce((a, n) => a + (n.me - n.spouse),0)
 return s > 0 ? "ME!" : s < 0 ? "SPOUSE!" : "DRAW!"

}

// SOLUTION 3:
function determineWhoCursedTheMost(obj) {
	let meCount = 0, spCount = 0;
  for (let p in obj) {
		 meCount += obj[p].me;
		 spCount += obj[p].spouse;
	}
	return meCount > spCount? 'ME!' :
	spCount > meCount? 'SPOUSE!' :
	'DRAW!'
}

console.log(determineWhoCursedTheMost({
  round1: {
    me: 10,
    spouse: 5,
  },
  round2: {
    me: 5,
    spouse: 10,
  },
  round3: {
    me: 10,
    spouse: 10,
  },
})) // "DRAW!"

console.log(determineWhoCursedTheMost({
  round1: {
    me: 40,
    spouse: 5,
  },
  round2: {
    me: 9,
    spouse: 10,
  },
  round3: {
    me: 9,
    spouse: 10,
  },
})) //  "ME!"

console.log(determineWhoCursedTheMost({
  round1: {
    me: 10,
    spouse: 5,
  },
  round2: {
    me: 9,
    spouse: 44,
  },
  round3: {
    me: 10,
    spouse: 55,
  },
})) //  "SPOUSE!"
